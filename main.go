package main

import (
	_ "apigo/docs" // docs is generated by Swag CLI, you have to import it.
	"apigo/handlers"
	"apigo/models"
	"log"
	"net/http"

	"github.com/gorilla/mux"
	httpSwagger "github.com/swaggo/http-swagger"
)

func requestHandler() {
	router := mux.NewRouter().StrictSlash(true)

	// Users Endpoint
	router.HandleFunc("/api/users", handlers.GetUsers).Methods("GET")
	router.HandleFunc("/api/users/{id:[0-9]+}", handlers.GetUser).Methods("GET")
	router.HandleFunc("/api/users/register", handlers.CreateUser).Methods("POST")
	router.HandleFunc("/api/users/{id:[0-9]+}", handlers.UpdateUser).Methods("PUT")
	router.HandleFunc("/api/users/{id:[0-9]+}", handlers.DeleteUser).Methods("DELETE")
	router.HandleFunc("/api/users/login", handlers.Login).Methods("POST")

	// Consultations Endpoint
	router.HandleFunc("/api/consultations", handlers.GetAllConsultations).Methods("GET")
	router.HandleFunc("/api/users/{id:[0-9]+}/consultations", handlers.GetAllConsultationsByUserId).Methods("GET")
	router.HandleFunc("/api/users/{id:[0-9]+}/consultations", handlers.CreateConsultation).Methods("POST")
	router.HandleFunc("/api/consultations/{id:[0-9]+}", handlers.DeleteConsultation).Methods("DELETE")
	// Swagger
	router.PathPrefix("/api/swagger").Handler(httpSwagger.WrapHandler)

	log.Fatal(http.ListenAndServe(":8080", router))
}

// @title Gang API
// @version 1.0
// @description This is an API lol
// @termsOfService http://swagger.io/terms/
// @contact.name API Support
// @contact.email soberkoder@swagger.io
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @host localhost:8080
// @BasePath /api

func main() {
	models.MigrarUser()
	models.MigrarConsultations()
	requestHandler()
}
